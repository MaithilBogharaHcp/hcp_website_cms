{"version":3,"file":"imagekitio-angular.js","sources":["../../../projects/imagekitio-angular/src/lib/imagekitio-angular.service.ts","../../../projects/imagekitio-angular/src/lib/ik-image/ik-image.component.ts","../../../projects/imagekitio-angular/src/lib/ik-video/ik-video.component.ts","../../../projects/imagekitio-angular/src/lib/ik-upload/ik-upload.component.ts","../../../projects/imagekitio-angular/src/lib/imagekitio-angular.module.ts","../../../projects/imagekitio-angular/src/public-api.ts","../../../projects/imagekitio-angular/src/imagekitio-angular.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport ImageKit from 'imagekit-javascript';\nconst SDK_VERSION = '5.0.0';\nexport interface Lqip {\n  readonly active: boolean;\n  readonly quality: number;\n}\n\nexport class ImageKitConfiguration {\n  urlEndpoint: string;\n  publicKey: string;\n  authenticator?: () => Promise<any>\n  lqip?: Lqip;\n  fileName?: string;\n  tags?: string;\n  useUniqueFileName?: boolean;\n  responseFields?: any;\n  isPrivateFile?: boolean;\n  folder?: string;\n  customCoordinates?: any;\n  sdkVersion?: string;\n}\n\n@Injectable()\nexport class ImagekitService {\n\n  _ikInstance: any;\n  constructor(private configuration: ImageKitConfiguration) {\n    (configuration.sdkVersion = `angular-${SDK_VERSION}`),\n      (this._ikInstance = new ImageKit(this.configuration));\n  }\n\n  get ikInstance(): any {\n    return this._ikInstance;\n  }\n\n  getUrl(config: object): string {\n    const url = this._ikInstance.url(config);\n    return url;\n  }\n}\n","import { Component, AfterViewInit, OnInit, ElementRef, Input, OnChanges } from '@angular/core';\nimport { ImagekitService } from '../imagekitio-angular.service';\nimport { Dict, QueryParameters, IkImageComponentOptions, LqipOptions } from '../utility/ik-type-def-collection'\nimport { Transformation } from 'imagekit-javascript/dist/src/interfaces/Transformation';\n\n@Component({\n  selector: 'ik-image',\n  template: `<img src='' (load)=\"onImageLoaded($event)\">`,\n})\nexport class IkImageComponent implements AfterViewInit, OnInit, OnChanges {\n  @Input('src') src: string;\n  @Input('path') path: string;\n  @Input('urlEndpoint') urlEndpoint: string;\n  @Input('transformation') transformation: Array<Transformation> = [];\n  @Input('transformationPosition') transformationPosition: \"path\" | \"query\";\n  @Input('queryParameters') queryParameters: QueryParameters;\n  @Input('lqip') lqip: LqipOptions;\n  @Input('loading') loading: string;\n  url = '';\n  lqipUrl = '';\n  \n  observer: MutationObserver;\n\n  constructor(private el: ElementRef, private imagekit: ImagekitService) {\n  }\n\n  ngOnInit(): void {\n    const options: IkImageComponentOptions =  this.src ? {src: this.src} : {path: this.path};\n    options.urlEndpoint = this.urlEndpoint ? this.urlEndpoint : this.imagekit._ikInstance.options.urlEndpoint;\n    options.transformation = this.transformation;\n    options.transformationPosition = this.transformationPosition;\n    options.queryParameters = this.queryParameters;\n    options.lqip = this.lqip;\n    this.setUrl(options);\n  }\n\n  ngOnChanges(): void {\n    this.ngOnInit();\n    this.ngAfterViewInit();\n  }\n\n  ngAfterViewInit(): void {\n    if(this.loading == 'lazy'){\n      const that = this;\n      if(this.lqipUrl){\n        // If given LQIP, use that first\n        this.loadImage(this, this.lqipUrl);\n      }\n      const imageObserver = new IntersectionObserver(\n        (entry: any, observer: IntersectionObserver)=>{\n          // Always load the original image when intersecting\n          that.handleIntersectionObserver(entry, observer, that.loadImage, that, that.url);\n        }\n      );\n      imageObserver.observe(this.el.nativeElement);\n    } else {\n      // If given LQIP, use that first\n      this.loadImage(this, this.lqipUrl ? this.lqipUrl : this.url);\n    }\n  }\n\n  onImageLoaded = (event: { srcElement: { src: string; } | any }) => {\n    const { loading, lqipUrl, url } = this;\n\n    if (loading !== 'lazy' && event.srcElement.src === lqipUrl) {\n      this.loadImage(this, url);\n    }\n  };\n\n  handleIntersectionObserver (entry: any, observer: IntersectionObserver, \n    loadImageFunc: Function, context: IkImageComponent, url: string): void {\n    if (entry[0] && entry[0].isIntersecting) {\n      let image = entry[0].target;\n      loadImageFunc(context, url);\n      observer.unobserve(image);\n    }\n  }\n\n  setUrl(options: IkImageComponentOptions): void {\n    const config = this.getConfigObject(options);\n    this.url = this.imagekit.getUrl(config);\n    if (options.lqip && options.lqip.active === true) {\n      this.lqipUrl = this.constructLqipUrl(options, options.lqip);\n    }\n  }\n\n  constructLqipUrl(options:IkImageComponentOptions, lqip: LqipOptions): any {\n    if (lqip && lqip.active) {\n      var quality = Math.round(lqip.quality || lqip.threshold || 20);\n      var blur = Math.round(lqip.blur || 6);\n      var newTransformation = options.transformation ? [...options.transformation] : [];\n      if (lqip.raw && typeof lqip.raw === \"string\" && lqip.raw.trim() != \"\") {\n        newTransformation.push({\n          raw: lqip.raw.trim()\n        });\n      } else {\n        newTransformation.push({\n          quality: String(quality),\n          blur: String(blur),\n        })\n      }\n      return this.imagekit.ikInstance.url({\n        ...options,\n        transformation: newTransformation\n      });\n    }\n  }\n\n  getConfigObject(options: IkImageComponentOptions): any {\n    const config = {\n      transformation : options.transformation\n    };\n    \n    if (options.urlEndpoint) {\n      config['urlEndpoint'] = options.urlEndpoint;\n    }else{\n      throw new Error('Missing urlEndpoint initialization!');\n    }\n\n    if (options.queryParameters) {\n      config['queryParameters'] = options.queryParameters;\n    }\n    if (options.src) {\n      config['src'] = options.src;\n      config['transformationPosition'] = 'query';\n    } else if (options.path) {\n      config['path'] = options.path;\n      if (options.transformationPosition) {\n        config['transformationPosition'] = options.transformationPosition;\n      }\n    } else {\n      throw new Error('Missing src / path during initialization!');\n    }\n    return config;\n  }\n\n  loadImage(context: IkImageComponent, url: string): void {\n    const nativeElement = context.el.nativeElement;\n    const attributes = nativeElement.attributes;\n    const attrsToSet = context.namedNodeMapToObject(attributes);\n    attrsToSet['src'] = url;\n    const image = nativeElement.children[0];\n    context.setElementAttributes(image, attrsToSet);\n  }\n\n  namedNodeMapToObject(source: NamedNodeMap): Dict {\n    let target: Dict = {};\n    Object.keys(source).forEach(index => {\n      const name = source[index].name;\n      const value = source[index].value;\n      target[name] = value;\n    });\n    return target;\n  };\n\n  setElementAttributes(element: any, attributesLiteral: Dict): void {\n    Object.keys(attributesLiteral).filter(attrName => attrName !== 'loading').forEach(attrName => {\n        element.setAttribute(attrName, attributesLiteral[attrName]);\n    });\n  }\n}\n","import { Component, OnInit, ElementRef, Input } from '@angular/core';\nimport { ImagekitService } from '../imagekitio-angular.service';\nimport { IkVideoComponentOptions, QueryParameters, Dict } from '../utility/ik-type-def-collection'\nimport { Transformation } from 'imagekit-javascript/dist/src/interfaces/Transformation';\n\n\n@Component({\n  selector: 'ik-video',\n  template: `<video controls><source src={{src}}>`,\n})\n\nexport class IkVideoComponent implements OnInit {\n  @Input('urlEndpoint') urlEndpoint: string;\n  @Input('path') path: string; //required\n  @Input('src') src: string; //required\n  @Input('transformation') transformation: Array<Transformation> = [];\n  @Input('transformationPosition') transformationPosition: \"path\" | \"query\";\n  @Input('queryParameters') queryParameters: QueryParameters;\n  url = '';\n\n  constructor(private el: ElementRef, private imagekit: ImagekitService) { }\n\n  ngOnInit(): void {\n    const options: IkVideoComponentOptions =  this.src ? {src: this.src} : {path: this.path};\n    options.transformation = this.transformation;\n    options.transformationPosition = this.transformationPosition;\n    options.urlEndpoint = this.urlEndpoint;\n    options.queryParameters = this.queryParameters;\n    this.setUrl(options);\n  }\n\n  ngAfterViewInit(): void {\n      this.loadVideo(this.url);\n  }\n\n  loadVideo(url:string): void {\n      const nativeElement = this.el.nativeElement;\n      const attributes = nativeElement.attributes;\n      const attrsToSet = this.namedNodeMapToObject(attributes);\n      attrsToSet['src'] = url;\n      const video = nativeElement.children[0];\n      this.setElementAttributes(video, attrsToSet);\n  }\n\n  namedNodeMapToObject(source: NamedNodeMap): Dict {\n      let target: Dict = {};\n      Object.keys(source).forEach(index => {\n        const name = source[index].name;\n        const value = source[index].value;\n        target[name] = value;\n      });\n      return target;\n  };\n\n  setUrl(options: IkVideoComponentOptions): void {\n      const config = this.getConfigObject(options);\n      this.url = this.imagekit.getUrl(config);\n  }\n\n  getConfigObject(options: IkVideoComponentOptions): any {\n    const config = {\n      transformation: options.transformation,\n    };\n    if (options.urlEndpoint) {\n      config['urlEndpoint'] = options.urlEndpoint;\n    } else{\n      throw new Error('Missing urlEndpoint initialization!');\n    }\n\n    if (options.queryParameters) {\n      config['queryParameters'] = options.queryParameters;\n    }\n    if (options.src) {\n      config['src'] = options.src;\n      config['transformationPosition'] = 'query';\n    } else if (options.path) {\n      config['path'] = options.path;\n      if (options.transformationPosition) {\n        config['transformationPosition'] = options.transformationPosition;\n      }\n    } else {\n      throw new Error('Missing src / path during initialization!');\n    }\n    return config;\n  }\n\n  setElementAttributes(element: any, attributesLiteral: Dict): void {\n    Object.keys(attributesLiteral).forEach(attrName => {\n        element.setAttribute(attrName, attributesLiteral[attrName]);\n    });\n  }\n}","import { AfterViewInit, ElementRef, Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ImagekitService } from '../imagekitio-angular.service';\nimport { IkUploadComponentOptions, Dict, HTMLInputEvent } from '../utility/ik-type-def-collection';\n\n@Component({\n  selector: 'ik-upload',\n  template: `\n  <input *ngIf=\"buttonRef; else elseBlock\" type=\"file\" (change)=\"handleFileInput($event)\" style=\"display:none\"/>\n  <ng-template #elseBlock>\n    <input type=\"file\" (change)=\"handleFileInput($event)\" />\n  </ng-template>\n  `,\n  providers: [ImagekitService]\n})\nexport class IkUploadComponent implements AfterViewInit {\n  @Input('fileName') fileName: string; //optional\n  @Input('useUniqueFileName') useUniqueFileName: boolean; //optional\n  @Input('tags') tags: Array<string>; //optional\n  @Input('folder') folder: string; //optional\n  @Input('publicKey') publicKey: string; //optional\n  @Input('urlEndpoint') urlEndpoint: string; //optional\n  @Input(\"authenticator\") authenticator: () => Promise<any>;\n  @Input('isPrivateFile') isPrivateFile: boolean; //optional\n  @Input('overwriteFile') overwriteFile: boolean; //optional\n  @Input('overwriteAITags') overwriteAITags: boolean; //optional\n  @Input('overwriteTags') overwriteTags: boolean; //optional\n  @Input('overwriteCustomMetadata') overwriteCustomMetadata: boolean; //optional\n  @Input('customCoordinates') customCoordinates: string; //optional\n  @Input('webhookUrl') webhookUrl: string; //optional\n  @Input('responseFields') responseFields: Array<string>; //optional\n  @Input('extensions') extensions: Array<Object>; //optional\n  @Input('customMetadata') customMetadata: Object; //optional\n  @Input('buttonRef') buttonRef: HTMLButtonElement; //optional\n  @Output() onError: EventEmitter<any> = new EventEmitter();\n  @Output() onSuccess: EventEmitter<any> = new EventEmitter();\n  @Input('validateFile') validateFile: (file: File) => boolean;\n  @Input('onUploadStart') onUploadStart: (e: HTMLInputEvent) => void;\n  @Input('onUploadProgress') onUploadProgress: (e: ProgressEvent) => void;\n  @Input('transformation') transformation: Object; //optional\n  fileToUpload: File = null;\n  xhr: XMLHttpRequest;\n\n  constructor(private el: ElementRef, private imagekit: ImagekitService) { \n  }\n  \n  ngAfterViewInit():void {\n    this.buttonRef && this.buttonRef.addEventListener('click', ()=>{this.el.nativeElement.children[0].click()});\n  }\n\n  abort() {\n    if (this.xhr) {\n      this.xhr.abort();\n    }\n  }\n\n  handleFileInput(e: HTMLInputEvent| any): void {\n    // Using IK-upload\n    const files = e.target.files;\n    this.fileToUpload = files.item(0);\n    const options: IkUploadComponentOptions = {\n      file: this.fileToUpload,\n      fileName: this.fileName || this.fileToUpload.name,\n      useUniqueFileName: this.useUniqueFileName,\n      tags: this.tags,\n      folder: this.folder,\n      customMetadata: this.customMetadata,\n      isPrivateFile: this.isPrivateFile,\n      overwriteFile: this.overwriteFile,\n      overwriteAITags: this.overwriteAITags,\n      overwriteTags: this.overwriteTags,\n      overwriteCustomMetadata: this.overwriteCustomMetadata,\n      customCoordinates: this.customCoordinates,\n      responseFields: this.responseFields,\n      extensions: this.extensions,\n      webhookUrl: this.webhookUrl,\n      onError: this.onError,\n      onSuccess: this.onSuccess,\n      transformation: this.transformation,\n    }\n\n    // Custom validation\n    if (!this.checkCustomFileValidation(options.file)) {\n      return;\n    }\n\n    if (!this.checkAuthenticator(options)) {\n      return;\n    }\n    \n    this.startIkUpload(e, options);\n  }\n  \n  checkCustomFileValidation(file: File): boolean {\n    if (this.validateFile && typeof this.validateFile === 'function') {\n     return this.validateFile(file);\n    }\n    return true;\n  }\n\n  checkAuthenticator(options: IkUploadComponentOptions): boolean {\n    if (!this.authenticator || typeof this.authenticator !== \"function\" || this.authenticator.length !== 0 || !(this.authenticator() instanceof Promise)) {\n      return this.throwError(\"The authenticator function is not provided or is not a function.\", options)\n    }\n    return true;\n  }\n\n  throwError(message: string, options: IkUploadComponentOptions): boolean {\n    if (options && options.onError instanceof EventEmitter) {\n      options.onError.emit({\n        message: message || \"Something went wrong.\",\n      });\n    }\n    return false;\n  }\n\n  handleAuthResponse = ({signature,token,expire},ik,params,options,progressCb) => {\n    ik.upload({ ...params, signature, token, expire }, (err, result) => {\n      this.handleUploadResponse(\n        err,\n        result,\n        options,\n        progressCb\n      );\n    });\n  }\n\n  startIkUpload(e: HTMLInputEvent, options: IkUploadComponentOptions): void {\n    // Custom upload-start tracker\n    if (this.onUploadStart && typeof this.onUploadStart === 'function') {\n      this.onUploadStart(e);\n    }\n\n    // Custom upload-progress tracker\n    options.xhr = new XMLHttpRequest();\n    this.xhr = options.xhr;\n    const params = this.getUploadParams(options);\n    const progressCb = this.createUploadProgressMonitor(options.xhr);\n    const ik = this.getIkInstance();\n    const authPromise = this.authenticator();\n      \n    authPromise.then((obj)=>this.handleAuthResponse(obj,ik,params,options,progressCb)).catch((data) => {\n      var error;\n      if (data instanceof Array) {\n        error = data[0];\n      } else {\n        error = data;\n      }\n\n      this.throwError(String(error), options);\n    });\n  }\n\n  getIkInstance(): any {\n    if(this.publicKey === undefined || \n      this.urlEndpoint === undefined ){\n        return this.imagekit.ikInstance;\n    }\n    return new ImagekitService({\n      urlEndpoint: this.urlEndpoint,\n      publicKey: this.publicKey,\n    })._ikInstance\n  }\n\n  handleUploadResponse(err, result, options, progressCb): void {\n    if (err) {\n      this.throwError(err, options);\n    } else {\n      if(options.onSuccess instanceof EventEmitter) {\n        options.onSuccess.emit(result);\n      }\n      if(options.xhr)\n      options.xhr.upload.removeEventListener('progress', progressCb);\n    }\n  }\n\n  createUploadProgressMonitor(xhr: XMLHttpRequest): any {\n    const progressCb = (e: ProgressEvent) => {\n      if (this.onUploadProgress && typeof this.onUploadProgress === 'function') {\n        // Custom upload-progress tracker\n        this.onUploadProgress(e);\n      }\n    };\n    if(xhr)\n    xhr.upload.addEventListener('progress', progressCb);\n    return progressCb;\n  }\n\n  getUploadParams(options: IkUploadComponentOptions): Dict {\n    const params: Dict = {\n      file: options.file,\n      fileName: options.fileName\n    };\n\n    if (options.useUniqueFileName !== undefined) {\n      Object.assign(params, { useUniqueFileName: options.useUniqueFileName });\n    }\n\n    if (options.folder !== undefined) {\n      Object.assign(params, { folder: options.folder });\n    }\n\n    if (options.customMetadata !== undefined) {\n      Object.assign(params, { customMetadata: options.customMetadata });\n    }\n\n    if (options.webhookUrl !== undefined) {\n      Object.assign(params, { webhookUrl: options.webhookUrl });\n    }\n\n    if (options.isPrivateFile !== undefined) {\n      Object.assign(params, { isPrivateFile: options.isPrivateFile });\n    }\n\n    if (options.overwriteFile !== undefined) {\n      Object.assign(params, { overwriteFile: options.overwriteFile });\n    }\n\n    if (options.overwriteAITags !== undefined) {\n      Object.assign(params, { overwriteAITags: options.overwriteAITags });\n    }\n\n    if (options.overwriteTags !== undefined) {\n      Object.assign(params, { overwriteTags: options.overwriteTags });\n    }\n\n    if (options.overwriteCustomMetadata !== undefined) {\n      Object.assign(params, { overwriteCustomMetadata: options.overwriteCustomMetadata });\n    }\n\n    if (options.tags !== undefined) {\n      Object.assign(params, { tags: options.tags });\n    }\n\n    if (options.customCoordinates !== undefined) {\n      Object.assign(params, { customCoordinates: options.customCoordinates });\n    }\n\n    if (options.responseFields !== undefined) {\n      Object.assign(params, { responseFields: options.responseFields });\n    }\n\n    if (options.extensions !== undefined) {\n      Object.assign(params, { extensions: options.extensions });\n    }\n\n    if (options.xhr !== undefined) {\n      Object.assign(params, { xhr: options.xhr });\n    }\n\n    if (options.transformation !== undefined) {\n      Object.assign(params, { transformation: options.transformation });\n    }\n    return params;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { IkImageComponent } from './ik-image/ik-image.component';\nimport { IkUploadComponent } from './ik-upload/ik-upload.component';\nimport { IkVideoComponent } from './ik-video/ik-video.component';\nimport { ImageKitConfiguration, ImagekitService } from './imagekitio-angular.service';\n\n@NgModule({\n  declarations: [\n    IkImageComponent,\n    IkVideoComponent,\n    IkUploadComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    IkImageComponent,\n    IkVideoComponent,\n    IkUploadComponent\n  ],\n  providers: [ ImagekitService ]\n})\nexport class ImagekitioAngularModule { \n  static forRoot(config: ImageKitConfiguration): ModuleWithProviders<ImagekitioAngularModule> {\n    return {\n      ngModule: ImagekitioAngularModule,\n      providers: [\n        {provide: ImageKitConfiguration, useValue: config }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of imagekitio-angular\n */\n\nexport * from './lib/imagekitio-angular.service';\nexport * from './lib/ik-image/ik-image.component';\nexport * from './lib/ik-video/ik-video.component';\nexport * from './lib/ik-upload/ik-upload.component';\nexport * from './lib/imagekitio-angular.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ImagekitService"],"mappings":"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"}