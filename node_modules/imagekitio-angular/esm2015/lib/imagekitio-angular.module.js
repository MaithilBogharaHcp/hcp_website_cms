import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { IkImageComponent } from './ik-image/ik-image.component';
import { IkUploadComponent } from './ik-upload/ik-upload.component';
import { IkVideoComponent } from './ik-video/ik-video.component';
import { ImageKitConfiguration, ImagekitService } from './imagekitio-angular.service';
import * as i0 from "@angular/core";
export class ImagekitioAngularModule {
    static forRoot(config) {
        return {
            ngModule: ImagekitioAngularModule,
            providers: [
                { provide: ImageKitConfiguration, useValue: config }
            ]
        };
    }
}
ImagekitioAngularModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ImagekitioAngularModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ImagekitioAngularModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ImagekitioAngularModule, declarations: [IkImageComponent,
        IkVideoComponent,
        IkUploadComponent], imports: [CommonModule], exports: [IkImageComponent,
        IkVideoComponent,
        IkUploadComponent] });
ImagekitioAngularModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ImagekitioAngularModule, providers: [ImagekitService], imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ImagekitioAngularModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        IkImageComponent,
                        IkVideoComponent,
                        IkUploadComponent
                    ],
                    imports: [CommonModule],
                    exports: [
                        IkImageComponent,
                        IkVideoComponent,
                        IkUploadComponent
                    ],
                    providers: [ImagekitService]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VraXRpby1hbmd1bGFyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ltYWdla2l0aW8tYW5ndWxhci9zcmMvbGliL2ltYWdla2l0aW8tYW5ndWxhci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7QUFnQnRGLE1BQU0sT0FBTyx1QkFBdUI7SUFDbEMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUE2QjtRQUMxQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLHVCQUF1QjtZQUNqQyxTQUFTLEVBQUU7Z0JBQ1QsRUFBQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRTthQUNwRDtTQUNGLENBQUM7SUFDSixDQUFDOztxSEFSVSx1QkFBdUI7c0hBQXZCLHVCQUF1QixpQkFaaEMsZ0JBQWdCO1FBQ2hCLGdCQUFnQjtRQUNoQixpQkFBaUIsYUFFVCxZQUFZLGFBRXBCLGdCQUFnQjtRQUNoQixnQkFBZ0I7UUFDaEIsaUJBQWlCO3NIQUlSLHVCQUF1QixhQUZ2QixDQUFFLGVBQWUsQ0FBRSxZQU5yQixDQUFDLFlBQVksQ0FBQzs0RkFRWix1QkFBdUI7a0JBZG5DLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLGdCQUFnQjt3QkFDaEIsZ0JBQWdCO3dCQUNoQixpQkFBaUI7cUJBQ2xCO29CQUNELE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztvQkFDdkIsT0FBTyxFQUFFO3dCQUNQLGdCQUFnQjt3QkFDaEIsZ0JBQWdCO3dCQUNoQixpQkFBaUI7cUJBQ2xCO29CQUNELFNBQVMsRUFBRSxDQUFFLGVBQWUsQ0FBRTtpQkFDL0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElrSW1hZ2VDb21wb25lbnQgfSBmcm9tICcuL2lrLWltYWdlL2lrLWltYWdlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJa1VwbG9hZENvbXBvbmVudCB9IGZyb20gJy4vaWstdXBsb2FkL2lrLXVwbG9hZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWtWaWRlb0NvbXBvbmVudCB9IGZyb20gJy4vaWstdmlkZW8vaWstdmlkZW8uY29tcG9uZW50JztcbmltcG9ydCB7IEltYWdlS2l0Q29uZmlndXJhdGlvbiwgSW1hZ2VraXRTZXJ2aWNlIH0gZnJvbSAnLi9pbWFnZWtpdGlvLWFuZ3VsYXIuc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIElrSW1hZ2VDb21wb25lbnQsXG4gICAgSWtWaWRlb0NvbXBvbmVudCxcbiAgICBJa1VwbG9hZENvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZXhwb3J0czogW1xuICAgIElrSW1hZ2VDb21wb25lbnQsXG4gICAgSWtWaWRlb0NvbXBvbmVudCxcbiAgICBJa1VwbG9hZENvbXBvbmVudFxuICBdLFxuICBwcm92aWRlcnM6IFsgSW1hZ2VraXRTZXJ2aWNlIF1cbn0pXG5leHBvcnQgY2xhc3MgSW1hZ2VraXRpb0FuZ3VsYXJNb2R1bGUgeyBcbiAgc3RhdGljIGZvclJvb3QoY29uZmlnOiBJbWFnZUtpdENvbmZpZ3VyYXRpb24pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPEltYWdla2l0aW9Bbmd1bGFyTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBJbWFnZWtpdGlvQW5ndWxhck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7cHJvdmlkZTogSW1hZ2VLaXRDb25maWd1cmF0aW9uLCB1c2VWYWx1ZTogY29uZmlnIH1cbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=