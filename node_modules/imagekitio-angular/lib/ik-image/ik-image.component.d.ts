import { AfterViewInit, OnInit, ElementRef, OnChanges } from '@angular/core';
import { ImagekitService } from '../imagekitio-angular.service';
import { Dict, QueryParameters, IkImageComponentOptions, LqipOptions } from '../utility/ik-type-def-collection';
import { Transformation } from 'imagekit-javascript/dist/src/interfaces/Transformation';
import * as i0 from "@angular/core";
export declare class IkImageComponent implements AfterViewInit, OnInit, OnChanges {
    private el;
    private imagekit;
    src: string;
    path: string;
    urlEndpoint: string;
    transformation: Array<Transformation>;
    transformationPosition: "path" | "query";
    queryParameters: QueryParameters;
    lqip: LqipOptions;
    loading: string;
    url: string;
    lqipUrl: string;
    observer: MutationObserver;
    constructor(el: ElementRef, imagekit: ImagekitService);
    ngOnInit(): void;
    ngOnChanges(): void;
    ngAfterViewInit(): void;
    onImageLoaded: (event: {
        srcElement: {
            src: string;
        } | any;
    }) => void;
    handleIntersectionObserver(entry: any, observer: IntersectionObserver, loadImageFunc: Function, context: IkImageComponent, url: string): void;
    setUrl(options: IkImageComponentOptions): void;
    constructLqipUrl(options: IkImageComponentOptions, lqip: LqipOptions): any;
    getConfigObject(options: IkImageComponentOptions): any;
    loadImage(context: IkImageComponent, url: string): void;
    namedNodeMapToObject(source: NamedNodeMap): Dict;
    setElementAttributes(element: any, attributesLiteral: Dict): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<IkImageComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IkImageComponent, "ik-image", never, { "src": "src"; "path": "path"; "urlEndpoint": "urlEndpoint"; "transformation": "transformation"; "transformationPosition": "transformationPosition"; "queryParameters": "queryParameters"; "lqip": "lqip"; "loading": "loading"; }, {}, never, never>;
}
