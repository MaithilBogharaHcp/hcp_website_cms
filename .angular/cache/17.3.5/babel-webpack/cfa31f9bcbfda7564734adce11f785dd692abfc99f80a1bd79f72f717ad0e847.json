{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./layout16.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./layout16.component.css?ngResource\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { environment } from '../../../../../environments/environment.development';\nlet Layout16Component = class Layout16Component {\n  constructor() {\n    this.imageUrl = environment.image_url_server;\n    this.getFile = new EventEmitter();\n  }\n  isBase64(imagePath) {\n    return imagePath ? imagePath.startsWith('data:image/') : false;\n  }\n  // setImage(event: any, index: number): void {\n  //   const input = event.target as HTMLInputElement;\n  //   const file = input.files?.[0];\n  //   if (file) {\n  //     this.getFile.emit({ file, index });\n  //   }\n  // }\n  validateImageDimensions(file, index) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const img = new Image();\n        img.onload = () => {\n          const {\n            width,\n            height\n          } = img;\n          if (width === 949 && height === 1080) {\n            resolve(true);\n          } else {\n            reject('Invalid image dimensions.');\n          }\n        };\n        img.src = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    });\n  }\n  setImage(event, index) {\n    const input = event.target;\n    const file = input.files?.[0];\n    if (file) {\n      this.validateImageDimensions(file, index).then(() => {\n        this.getFile.emit({\n          file,\n          index\n        });\n      }).catch(error => {\n        alert('Invalid image dimensions. The dimensions must be: ' + '949/1080');\n      });\n    }\n  }\n  static #_ = this.propDecorators = {\n    id: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    isEdit: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    imageName1: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    imageName2: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    getFile: [{\n      type: Output\n    }]\n  };\n};\nLayout16Component = __decorate([Component({\n  selector: 'app-layout16',\n  standalone: true,\n  imports: [],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], Layout16Component);\nexport { Layout16Component };","map":{"version":3,"names":["Component","EventEmitter","Input","Output","environment","Layout16Component","constructor","imageUrl","image_url_server","getFile","isBase64","imagePath","startsWith","validateImageDimensions","file","index","Promise","resolve","reject","reader","FileReader","onload","e","img","Image","width","height","src","target","result","readAsDataURL","setImage","event","input","files","then","emit","catch","error","alert","_","args","required","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["D:\\Maithil\\website-cms\\src\\app\\components\\common\\layouts\\layout16-P\\layout16.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { environment } from '../../../../../environments/environment.development';\r\ninterface FileWithIndex {\r\n  file: File;\r\n  index: number;\r\n}\r\n@Component({\r\n  selector: 'app-layout16',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './layout16.component.html',\r\n  styleUrl: './layout16.component.css',\r\n})\r\nexport class Layout16Component {\r\n  @Input({ required: true }) id: any;\r\n  @Input({ required: true }) isEdit: any;\r\n  @Input({ required: true }) imageName1!: string;\r\n  @Input({ required: true }) imageName2!: string;\r\n  imageUrl = environment.image_url_server;\r\n\r\n  @Output() getFile = new EventEmitter<FileWithIndex>();\r\n  isBase64(imagePath: string | null): boolean {\r\n    return imagePath ? imagePath.startsWith('data:image/') : false;\r\n  }\r\n\r\n  // setImage(event: any, index: number): void {\r\n  //   const input = event.target as HTMLInputElement;\r\n  //   const file = input.files?.[0];\r\n\r\n  //   if (file) {\r\n  //     this.getFile.emit({ file, index });\r\n  //   }\r\n  // }\r\n  validateImageDimensions(file: File, index: number): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e: any) => {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n          const { width, height } = img;\r\n\r\n          if (width === 949 && height === 1080) {\r\n            resolve(true);\r\n          } else {\r\n            reject('Invalid image dimensions.');\r\n          }\r\n        };\r\n        img.src = e.target.result;\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }\r\n\r\n  setImage(event: any, index: number): void {\r\n    const input = event.target as HTMLInputElement;\r\n    const file = input.files?.[0];\r\n\r\n    if (file) {\r\n      this.validateImageDimensions(file, index)\r\n        .then(() => {\r\n          this.getFile.emit({ file, index });\r\n        })\r\n        .catch((error) => {\r\n          alert(\r\n            'Invalid image dimensions. The dimensions must be: ' + '949/1080'\r\n          );\r\n        });\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AACtE,SAASC,WAAW,QAAQ,qDAAqD;AAY1E,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAAvBC,YAAA;IAKL,KAAAC,QAAQ,GAAGH,WAAW,CAACI,gBAAgB;IAE7B,KAAAC,OAAO,GAAG,IAAIR,YAAY,EAAiB;EAmDvD;EAlDES,QAAQA,CAACC,SAAwB;IAC/B,OAAOA,SAAS,GAAGA,SAAS,CAACC,UAAU,CAAC,aAAa,CAAC,GAAG,KAAK;EAChE;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACAC,uBAAuBA,CAACC,IAAU,EAAEC,KAAa;IAC/C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAE/BD,MAAM,CAACE,MAAM,GAAIC,CAAM,IAAI;QACzB,MAAMC,GAAG,GAAG,IAAIC,KAAK,EAAE;QACvBD,GAAG,CAACF,MAAM,GAAG,MAAK;UAChB,MAAM;YAAEI,KAAK;YAAEC;UAAM,CAAE,GAAGH,GAAG;UAE7B,IAAIE,KAAK,KAAK,GAAG,IAAIC,MAAM,KAAK,IAAI,EAAE;YACpCT,OAAO,CAAC,IAAI,CAAC;UACf,CAAC,MAAM;YACLC,MAAM,CAAC,2BAA2B,CAAC;UACrC;QACF,CAAC;QACDK,GAAG,CAACI,GAAG,GAAGL,CAAC,CAACM,MAAM,CAACC,MAAM;MAC3B,CAAC;MAEDV,MAAM,CAACW,aAAa,CAAChB,IAAI,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAiB,QAAQA,CAACC,KAAU,EAAEjB,KAAa;IAChC,MAAMkB,KAAK,GAAGD,KAAK,CAACJ,MAA0B;IAC9C,MAAMd,IAAI,GAAGmB,KAAK,CAACC,KAAK,GAAG,CAAC,CAAC;IAE7B,IAAIpB,IAAI,EAAE;MACR,IAAI,CAACD,uBAAuB,CAACC,IAAI,EAAEC,KAAK,CAAC,CACtCoB,IAAI,CAAC,MAAK;QACT,IAAI,CAAC1B,OAAO,CAAC2B,IAAI,CAAC;UAAEtB,IAAI;UAAEC;QAAK,CAAE,CAAC;MACpC,CAAC,CAAC,CACDsB,KAAK,CAAEC,KAAK,IAAI;QACfC,KAAK,CACH,oDAAoD,GAAG,UAAU,CAClE;MACH,CAAC,CAAC;IACN;EACF;EAAC,QAAAC,CAAA,G;;YAxDAtC,KAAK;MAAAuC,IAAA,GAAC;QAAEC,QAAQ,EAAE;MAAI,CAAE;IAAA;;YACxBxC,KAAK;MAAAuC,IAAA,GAAC;QAAEC,QAAQ,EAAE;MAAI,CAAE;IAAA;;YACxBxC,KAAK;MAAAuC,IAAA,GAAC;QAAEC,QAAQ,EAAE;MAAI,CAAE;IAAA;;YACxBxC,KAAK;MAAAuC,IAAA,GAAC;QAAEC,QAAQ,EAAE;MAAI,CAAE;IAAA;;YAGxBvC;IAAM;;;AAPIE,iBAAiB,GAAAsC,UAAA,EAP7B3C,SAAS,CAAC;EACT4C,QAAQ,EAAE,cAAc;EACxBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,EAAE;EACXC,QAAA,EAAAC,oBAAwC;;CAEzC,CAAC,C,EACW3C,iBAAiB,CA0D7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}