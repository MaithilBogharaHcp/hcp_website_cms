{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AnalyticsServiceService = class AnalyticsServiceService {\n  constructor() {}\n  trackEvent(eventName, eventDetails, eventCategory) {\n    gtag('event', eventName, {\n      // event Type - example: 'SCROLL_TO_TOP_CLICKED'\n      'event_category': eventCategory,\n      // the label that will show up in the dashboard as the events name\n      'event_label': eventName,\n      // a short description of what happened\n      'value': eventDetails\n    });\n  }\n  static #_ = this.ctorParameters = () => [];\n};\nAnalyticsServiceService = __decorate([Injectable({\n  providedIn: 'root'\n})], AnalyticsServiceService);\nexport { AnalyticsServiceService };","map":{"version":3,"names":["Injectable","AnalyticsServiceService","constructor","trackEvent","eventName","eventDetails","eventCategory","gtag","_","__decorate","providedIn"],"sources":["D:\\Maithil\\website-cms\\src\\app\\services\\analytics-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\ndeclare var gtag : any;\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalyticsServiceService {\r\n\r\n  constructor() { }\r\n\r\n  trackEvent(eventName: string, eventDetails: string, eventCategory: string) {\r\n    gtag('event', eventName, {\r\n    // event Type - example: 'SCROLL_TO_TOP_CLICKED'\r\n    'event_category': eventCategory,\r\n    // the label that will show up in the dashboard as the events name\r\n    'event_label': eventName,\r\n    // a short description of what happened\r\n    'value': eventDetails\r\n    })\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAQnC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAElCC,YAAA,GAAgB;EAEhBC,UAAUA,CAACC,SAAiB,EAAEC,YAAoB,EAAEC,aAAqB;IACvEC,IAAI,CAAC,OAAO,EAAEH,SAAS,EAAE;MACzB;MACA,gBAAgB,EAAEE,aAAa;MAC/B;MACA,aAAa,EAAEF,SAAS;MACxB;MACA,OAAO,EAAEC;KACR,CAAC;EACJ;EAAC,QAAAG,CAAA,G;;AAbUP,uBAAuB,GAAAQ,UAAA,EAHnCT,UAAU,CAAC;EACVU,UAAU,EAAE;CACb,CAAC,C,EACWT,uBAAuB,CAcnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}