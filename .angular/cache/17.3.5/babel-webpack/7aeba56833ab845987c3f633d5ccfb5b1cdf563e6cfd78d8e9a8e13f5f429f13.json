{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./layout1.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./layout1.component.css?ngResource\";\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { environment } from '../../../../../environments/environment.development';\nlet Layout1Component = class Layout1Component {\n  constructor() {\n    this.getFile = new EventEmitter();\n    this.titleChange = new EventEmitter();\n    this.descriptionChange = new EventEmitter();\n    this.imageUrl = environment.image_url_server;\n  }\n  openCropperDialog(event) {\n    const input = event.target;\n    const file = input.files?.[0];\n    if (file) {\n      this.getFile.emit(file);\n    }\n  }\n  CustomTitleText(event) {\n    this.titleChange.emit(event.target.value);\n  }\n  CustomText(event) {\n    this.descriptionChange.emit(event.target.value);\n  }\n  static #_ = this.propDecorators = {\n    layout: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    id: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    isEdit: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    getFile: [{\n      type: Output\n    }],\n    titleChange: [{\n      type: Output\n    }],\n    descriptionChange: [{\n      type: Output\n    }]\n  };\n};\nLayout1Component = __decorate([Component({\n  selector: 'app-layout1',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatSelectModule, FormsModule, NgOptimizedImage],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], Layout1Component);\nexport { Layout1Component };","map":{"version":3,"names":["CommonModule","NgOptimizedImage","Component","EventEmitter","Input","Output","MatSelectModule","MatInputModule","MatFormFieldModule","FormsModule","environment","Layout1Component","constructor","getFile","titleChange","descriptionChange","imageUrl","image_url_server","openCropperDialog","event","input","target","file","files","emit","CustomTitleText","value","CustomText","_","args","required","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["D:\\Maithil\\website-cms\\src\\app\\components\\common\\layouts\\layout1\\layout1.component.ts"],"sourcesContent":["import { CommonModule, NgOptimizedImage } from '@angular/common';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormGroup, FormControl, FormsModule } from '@angular/forms';\r\nimport { Homepage } from '../../../../interfaces/homepage';\r\nimport { environment } from '../../../../../environments/environment.development';\r\n\r\n@Component({\r\n  selector: 'app-layout1',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    NgOptimizedImage\r\n  ],\r\n  templateUrl: './layout1.component.html',\r\n  styleUrl: './layout1.component.css',\r\n})\r\nexport class Layout1Component  {\r\n  @Input({ required: true }) layout!: Homepage;\r\n  @Input({ required: true }) id: any;\r\n  @Input({ required: true }) isEdit: any;\r\n\r\n  @Output() getFile = new EventEmitter<File>();\r\n  @Output() titleChange = new EventEmitter();\r\n  @Output() descriptionChange = new EventEmitter();\r\n  image!: File;\r\n  imageName1!: string ;\r\n  imageUrl = environment.image_url_server\r\n  openCropperDialog(event: any) {\r\n    const input = event.target as HTMLInputElement;\r\n    const file = input.files?.[0];\r\n    if (file) {\r\n      this.getFile.emit(file);\r\n    }\r\n  }\r\n\r\n  CustomTitleText(event: any) {\r\n    this.titleChange.emit(event.target.value);\r\n  }\r\n\r\n  CustomText(event: any) {\r\n    this.descriptionChange.emit(event.target.value)\r\n  }\r\n\r\n  \r\n}\r\n"],"mappings":";;;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,iBAAiB;AAChE,SAASC,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AACtE,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAAiCC,WAAW,QAAQ,gBAAgB;AAEpE,SAASC,WAAW,QAAQ,qDAAqD;AAgB1E,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAAtBC,YAAA;IAKK,KAAAC,OAAO,GAAG,IAAIV,YAAY,EAAQ;IAClC,KAAAW,WAAW,GAAG,IAAIX,YAAY,EAAE;IAChC,KAAAY,iBAAiB,GAAG,IAAIZ,YAAY,EAAE;IAGhD,KAAAa,QAAQ,GAAGN,WAAW,CAACO,gBAAgB;EAkBzC;EAjBEC,iBAAiBA,CAACC,KAAU;IAC1B,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAA0B;IAC9C,MAAMC,IAAI,GAAGF,KAAK,CAACG,KAAK,GAAG,CAAC,CAAC;IAC7B,IAAID,IAAI,EAAE;MACR,IAAI,CAACT,OAAO,CAACW,IAAI,CAACF,IAAI,CAAC;IACzB;EACF;EAEAG,eAAeA,CAACN,KAAU;IACxB,IAAI,CAACL,WAAW,CAACU,IAAI,CAACL,KAAK,CAACE,MAAM,CAACK,KAAK,CAAC;EAC3C;EAEAC,UAAUA,CAACR,KAAU;IACnB,IAAI,CAACJ,iBAAiB,CAACS,IAAI,CAACL,KAAK,CAACE,MAAM,CAACK,KAAK,CAAC;EACjD;EAAC,QAAAE,CAAA,G;;YAxBAxB,KAAK;MAAAyB,IAAA,GAAC;QAAEC,QAAQ,EAAE;MAAI,CAAE;IAAA;;YACxB1B,KAAK;MAAAyB,IAAA,GAAC;QAAEC,QAAQ,EAAE;MAAI,CAAE;IAAA;;YACxB1B,KAAK;MAAAyB,IAAA,GAAC;QAAEC,QAAQ,EAAE;MAAI,CAAE;IAAA;;YAExBzB;IAAM;;YACNA;IAAM;;YACNA;IAAM;;;AAPIM,gBAAgB,GAAAoB,UAAA,EAd5B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,aAAa;EACvBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPlC,YAAY,EACZQ,kBAAkB,EAClBD,cAAc,EACdD,eAAe,EACfG,WAAW,EACXR,gBAAgB,CACjB;EACDkC,QAAA,EAAAC,oBAAuC;;CAExC,CAAC,C,EACWzB,gBAAgB,CA4B5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}