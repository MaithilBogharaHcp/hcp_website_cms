{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./research-publication.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./research-publication.component.css?ngResource\";\nimport { ChangeDetectorRef, Component, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { FooterComponent } from '../../shared/footer/footer.component';\nimport { Layout4Component } from '../../common/layouts/layout4-P/layout4.component';\nimport { Layout2Component } from '../../common/layouts/layout2/layout2.component';\nimport { ToasterService } from '../../../services/toaster.service';\nimport { MessageService } from 'primeng/api';\nimport { CoverComponent } from '../../shared/cover/cover.component';\nimport { TopbarComponent } from '../../shared/topbar/topbar.component';\nimport { CmsTopbarComponent } from '../../shared/cms-topbar/cms-topbar.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ToastModule } from 'primeng/toast';\nimport { GeneralServicesService } from '../../../services/general-services.service';\nlet ResearchPublicationComponent = class ResearchPublicationComponent {\n  constructor(service, router, spinner, renderer, msgService, cdr) {\n    this.service = service;\n    this.router = router;\n    this.spinner = spinner;\n    this.renderer = renderer;\n    this.msgService = msgService;\n    this.cdr = cdr;\n    this.isLoading = true;\n    this.isScrolling = true;\n    this.lastScrollTop = 0;\n    this.isSideBar = false;\n    this.isEdit = true; //Mode\n    this.showNavLogo = false; //Logo toggle\n    this.reseachPubLayouts = []; // Array of architectureLayouts\n    this.hasChanges = false;\n    this.selectedDate = null; // Initialize to null\n  }\n  ngOnInit() {\n    this.fetchData();\n  }\n  fetchData() {\n    this.spinner.show();\n    this.service.getResearchAndPublicationPageData().subscribe(response => {\n      this.reseachPubLayouts = response.data;\n      this.isLoading = false;\n      this.spinner.hide();\n      this.cdr.detectChanges();\n    }, error => {\n      console.error('Error fetching architecture page data:', error);\n      this.spinner.hide();\n      this.cdr.detectChanges();\n    });\n  }\n  preview() {\n    this.isEdit = false;\n  }\n  backBtn() {\n    // this.isEdit = true;\n    // console.log(\"Works\")\n    this.isSideBar = !this.isSideBar;\n    if (this.isSideBar) {\n      this.renderer.setStyle(document.getElementById('body'), 'overflow', 'hidden');\n    } else {\n      this.renderer.setStyle(document.getElementById('body'), 'overflow', 'visible');\n    }\n  }\n  toTop() {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }\n  navigate(url) {\n    this.router.navigate([`${url}`]);\n  }\n  onFilesSelected(files, index, layoutId) {\n    const fileArray = Array.isArray(files) ? files : [files];\n    const reader = new FileReader();\n    fileArray.forEach((file, fileIndex) => {\n      reader.onload = () => {\n        const imageUrl = reader.result;\n        this.reseachPubLayouts.forEach((data, i) => {\n          if (layoutId === data.rp_layout_id) {\n            data.rp_image_path = imageUrl;\n            this.hasChanges = true;\n          } else {\n            if (i === index) {\n              data.rp_image_path = imageUrl;\n              this.hasChanges = true;\n            }\n          }\n        });\n        this.cdr.detectChanges();\n      };\n      reader.readAsDataURL(file);\n    });\n  }\n  changeTitle(event, index) {\n    this.hasChanges = true;\n    this.reseachPubLayouts[index]['rp_title'] = event;\n  }\n  changeDescription(event, index) {\n    this.hasChanges = true;\n    this.reseachPubLayouts[index]['rp_description'] = event;\n  }\n  changeMode() {\n    this.isEdit = !this.isEdit;\n  }\n  onPublish() {\n    this.hasChanges = false;\n    this.spinner.show();\n    this.service.postResearchAndPublicationData(this.reseachPubLayouts).subscribe(data => {\n      if (data.message === 'success') {\n        this.msgService.successToaster('Uploaded successfully');\n        this.fetchData();\n        this.spinner.hide();\n      }\n    });\n  }\n  sideBarToogle() {\n    this.isSideBar = !this.isSideBar;\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: GeneralServicesService\n  }, {\n    type: Router\n  }, {\n    type: NgxSpinnerService\n  }, {\n    type: Renderer2\n  }, {\n    type: ToasterService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\nResearchPublicationComponent = __decorate([Component({\n  selector: 'app-research-publication',\n  standalone: true,\n  imports: [Layout4Component, Layout2Component, FooterComponent, CoverComponent, TopbarComponent, CmsTopbarComponent, NgxSpinnerModule, Layout2Component, MatIconModule, ToastModule],\n  providers: [ToasterService, MessageService],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ResearchPublicationComponent);\nexport { ResearchPublicationComponent };","map":{"version":3,"names":["ChangeDetectorRef","Component","Renderer2","Router","NgxSpinnerModule","NgxSpinnerService","FooterComponent","Layout4Component","Layout2Component","ToasterService","MessageService","CoverComponent","TopbarComponent","CmsTopbarComponent","MatIconModule","ToastModule","GeneralServicesService","ResearchPublicationComponent","constructor","service","router","spinner","renderer","msgService","cdr","isLoading","isScrolling","lastScrollTop","isSideBar","isEdit","showNavLogo","reseachPubLayouts","hasChanges","selectedDate","ngOnInit","fetchData","show","getResearchAndPublicationPageData","subscribe","response","data","hide","detectChanges","error","console","preview","backBtn","setStyle","document","getElementById","toTop","window","scrollTo","top","behavior","navigate","url","onFilesSelected","files","index","layoutId","fileArray","Array","isArray","reader","FileReader","forEach","file","fileIndex","onload","imageUrl","result","i","rp_layout_id","rp_image_path","readAsDataURL","changeTitle","event","changeDescription","changeMode","onPublish","postResearchAndPublicationData","message","successToaster","sideBarToogle","_","__decorate","selector","standalone","imports","providers","template","__NG_CLI_RESOURCE__0"],"sources":["D:\\Maithil\\website-cms\\src\\app\\components\\pages\\research-publication\\research-publication.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, Renderer2 } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\r\nimport { Title, Meta } from '@angular/platform-browser';\r\nimport { FooterComponent } from '../../shared/footer/footer.component';\r\nimport { Layout4Component } from '../../common/layouts/layout4-P/layout4.component';\r\nimport { Layout2Component } from '../../common/layouts/layout2/layout2.component';\r\nimport { ToasterService } from '../../../services/toaster.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CoverComponent } from '../../shared/cover/cover.component';\r\nimport { TopbarComponent } from '../../shared/topbar/topbar.component';\r\nimport { CmsTopbarComponent } from '../../shared/cms-topbar/cms-topbar.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { GeneralServicesService } from '../../../services/general-services.service';\r\n\r\n@Component({\r\n  selector: 'app-research-publication',\r\n  standalone: true,\r\n  imports: [\r\n    Layout4Component,\r\n    Layout2Component,\r\n    FooterComponent,\r\n    CoverComponent,\r\n    TopbarComponent,\r\n    CmsTopbarComponent,\r\n    NgxSpinnerModule,\r\n    Layout2Component,\r\n    MatIconModule,\r\n    ToastModule,\r\n  ],\r\n  providers: [ToasterService, MessageService],\r\n  templateUrl: './research-publication.component.html',\r\n  styleUrl: './research-publication.component.css',\r\n})\r\nexport class ResearchPublicationComponent {\r\n  isLoading = true;\r\n  isScrolling: boolean = true;\r\n  scrollTimeout: any; // Declare scrollTimeout property\r\n  lastScrollTop: number = 0;\r\n  isSideBar: boolean = false;\r\n  isEdit: boolean = true; //Mode\r\n  showNavLogo: boolean = false; //Logo toggle\r\n  reseachPubLayouts: any[] = []; // Array of architectureLayouts\r\n  hasChanges: boolean = false;\r\n  constructor(\r\n    private service: GeneralServicesService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private renderer: Renderer2,\r\n    public msgService: ToasterService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  cities: any;\r\n  id!: string;\r\n  selectedCity: any;\r\n  selectedDate: Date | null = null; // Initialize to null\r\n  reseachPubDescription: any;\r\n\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    this.spinner.show();\r\n    this.service.getResearchAndPublicationPageData().subscribe(\r\n      (response) => {\r\n        this.reseachPubLayouts = response.data;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n        this.cdr.detectChanges();\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching architecture page data:', error);\r\n        this.spinner.hide();\r\n        this.cdr.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  preview() {\r\n    this.isEdit = false;\r\n  }\r\n\r\n  backBtn() {\r\n    // this.isEdit = true;\r\n    // console.log(\"Works\")\r\n    this.isSideBar = !this.isSideBar;\r\n    if (this.isSideBar) {\r\n      this.renderer.setStyle(\r\n        document.getElementById('body'),\r\n        'overflow',\r\n        'hidden'\r\n      );\r\n    } else {\r\n      this.renderer.setStyle(\r\n        document.getElementById('body'),\r\n        'overflow',\r\n        'visible'\r\n      );\r\n    }\r\n  }\r\n\r\n  toTop() {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }\r\n\r\n  navigate(url: any) {\r\n    this.router.navigate([`${url}`]);\r\n  }\r\n\r\n  onFilesSelected(files: File | File[], index: number, layoutId: string) {\r\n    const fileArray = Array.isArray(files) ? files : [files];\r\n    const reader = new FileReader();\r\n\r\n    fileArray.forEach((file, fileIndex) => {\r\n      reader.onload = () => {\r\n        const imageUrl = reader.result as string;\r\n        this.reseachPubLayouts.forEach((data, i) => {\r\n          if (layoutId === data.rp_layout_id) {\r\n            data.rp_image_path = imageUrl;\r\n            this.hasChanges = true;\r\n          } else {\r\n            if (i === index) {\r\n              data.rp_image_path = imageUrl;\r\n              this.hasChanges = true;\r\n            }\r\n          }\r\n        });\r\n        this.cdr.detectChanges();\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }\r\n\r\n  changeTitle(event: any, index: any) {\r\n    this.hasChanges = true;\r\n    this.reseachPubLayouts[index]['rp_title'] = event;\r\n  }\r\n\r\n  changeDescription(event: any, index: any) {\r\n    this.hasChanges = true;\r\n    this.reseachPubLayouts[index]['rp_description'] = event;\r\n  }\r\n\r\n  changeMode() {\r\n    this.isEdit = !this.isEdit;\r\n  }\r\n\r\n  onPublish() {\r\n    this.hasChanges = false;\r\n    this.spinner.show();\r\n\r\n    this.service\r\n      .postResearchAndPublicationData(this.reseachPubLayouts)\r\n      .subscribe((data) => {\r\n        if (data.message === 'success') {\r\n          this.msgService.successToaster('Uploaded successfully');\r\n          this.fetchData();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  sideBarToogle() {\r\n    this.isSideBar = !this.isSideBar;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}