{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nlet AuthGuard = class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: AuthService\n  }, {\n    type: Router\n  }];\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);\nexport { AuthGuard };","map":{"version":3,"names":["Injectable","Router","AuthService","AuthGuard","constructor","authService","router","canActivate","isLoggedIn","navigate","_","__decorate","providedIn"],"sources":["D:\\Maithil\\website-cms\\src\\app\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.isLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAAsBC,MAAM,QAAQ,iBAAiB;AACrD,SAASC,WAAW,QAAQ,gBAAgB;AAKrC,IAAMC,SAAS,GAAf,MAAMA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE,EAAE;MACjC,OAAO,IAAI;IACb,CAAC,MAAM;MACL,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;IACd;EACF;EAAC,QAAAC,CAAA,G;;;;;;AAVUP,SAAS,GAAAQ,UAAA,EAHrBX,UAAU,CAAC;EACVY,UAAU,EAAE;CACb,CAAC,C,EACWT,SAAS,CAWrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}